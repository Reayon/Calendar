package warstwaLogiki;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;
import warstwaDanych.Kontakt;
import warstwaDanych.Wydarzenia;
import warstwaInterfejsUzytkownika.consoleUI;

public class Glowna {
	
	/*public static String wyswietlKontakty(ArrayList<Kontakt> k)
	{
		String tekst = "";
		for (int i = 0; i < k.size(); i++) {
			tekst += i+1+". ";
			tekst += k.get(i).toStringZWydarzeniem()+" ";
			tekst += "\n";
		}
		return tekst;
	}
	
	public static String wyswietlWydarzenia(ArrayList<Wydarzenia> w)
	{
		String tekst = "";
		for (int i = 0; i < w.size(); i++) {
			tekst += i+1+". ";
			tekst += w.get(i)+" ";
			tekst += "\n";
		}
		return tekst;
	}
	
	public static boolean equalsArrayListKontakty(ArrayList<Kontakt> k, Kontakt ko)
	{
		for (int i = 0; i < k.size(); i++) {
			if(k.get(i).equals(ko)) {
				return true;
			}
		}
		return false;
	}
	
	public static boolean equalsArrayListWydarzenia(ArrayList<Wydarzenia> w, Wydarzenia wy)
	{
		for (int i = 0; i < w.size(); i++) {
			if(w.get(i).equals(wy)) {
				return true;
			}
		}
		return false;
	}
	
*/
	public static Scanner sc = new Scanner(System.in).useDelimiter("\n");
	public static Scanner sc1 = new Scanner(System.in);
	
	public static void main(String[] args) throws SQLException{
		
		
		ArrayList<Kontakt> kontakty = new ArrayList<Kontakt>();
		ArrayList<Wydarzenia> wydarzenia = new ArrayList<Wydarzenia>();
		
		dbManager db = new dbManager();
		db.odczytajKontakty(kontakty);
		db.odczytajWydarzenia(wydarzenia);
		db.polaczAssign(kontakty, wydarzenia);
		
		dataManager dm = new dataManager(kontakty, wydarzenia);
		
		consoleUI c = new consoleUI(dm);
		
		System.out.println("Wybierz interfejs: ");
		System.out.println("1 Konsolowy");
		System.out.println("2 Graficzny");
		
		int wybor = sc1.nextInt();
		switch(wybor) {
			case 1:
				c.showUI(sc);
				break;
			case 2:
				//gui.showGUI(sc);
				break;
		}
		
		
		
		/*ArrayList<Kontakt> kontakt = new ArrayList<Kontakt>();
		ArrayList<Wydarzenia> wydarzenia = new ArrayList<Wydarzenia>();
		dbManager db = new dbManager();
		db.odczytajWydarzenia(wydarzenia);
		db.odczytajKontakty(kontakt);
		db.polaczAssign(kontakt, wydarzenia);
		//XML xml = new XML();
		//xml.odczytKontaktowXML(kontakt);
		//xml.odczytWydarzenXML(wydarzenia);
		
		while(true)
		{
		System.out.println("Kalendarz");
		System.out.println("1 Dodaj kontakt");
		System.out.println("2 Usuń kontakt");
		System.out.println("3 Wyswietl kontakt");
		System.out.println("4 Posortuj kontakty");
		System.out.println("5 Dodaj wydarzenie");
		System.out.println("6 Usuń wydarznie");
		System.out.println("7 Wyswietl wydarznie");
		System.out.println("8 Posortuj wydarzenia");
		System.out.println("9 Przypisanie kontaktu do wydarzenia");
		System.out.println("0 Wyjdz");
		
		int wybor1 = sc.nextInt();
		int w = 0;
		switch(wybor1)
		{
		case 1: 
			System.out.println("Podaj imie");
			String imie = sc.next();
			System.out.println("Podaj nazwisko");
			String nazwisko= sc.next();
			System.out.println("Podaj nr");
			int numer = sc.nextInt();
			System.out.println("Podaj email");
			String email= sc.next();
			
			if(equalsArrayListKontakty(kontakt, new Kontakt(imie, nazwisko, numer, email))==false) {
				Kontakt kon = new Kontakt(imie, nazwisko, numer, email);
				db.dodajKontakt(kontakt, kon);
				kontakt.add(kon);
				//xml.zapisKontaktowDoXML(kontakt);
				break;
			} else {
				System.out.println("Taki kontakt już istnieje");
				break;
			}
		case 2: 
			for (int i = 0; i < kontakt.size(); i++) {
				System.out.println(i+1+". "+kontakt.get(i));
			}
			w = sc.nextInt();
			db.usunKontakt(kontakt.get(w-1));
			kontakt.remove(w-1);
			//xml.zapisKontaktowDoXML(kontakt);
			break;
		case 3: 
			System.out.println(wyswietlKontakty(kontakt));
			break;
		case 4: 
			System.out.println("Po czy chcesz posortowac?");
			System.out.println("1. imie");
			System.out.println("2. nazwisko");
			int wybor2 = sc.nextInt();
			switch(wybor2)
			{
				case 1:
					Collections.sort(kontakt);
					System.out.println("Sortowanie..");
					for (int i = 0; i < kontakt.size();i++) {
						System.out.println(kontakt.get(i));
					}
					System.out.println();
					break;
				case 2:
					Collections.sort(kontakt,new KontaktNazwiskoComparator());
					System.out.println("Sortowanie..");
					for (int i = 0; i < kontakt.size();i++) {
						System.out.println(kontakt.get(i));
					}
					System.out.println();
					break;
			}
			break;
		case 5: 
			System.out.println("Podaj nazwe wydarzenia");
			String nazwa = sc1.next();
			System.out.println("Podaj miejsce wydarzenia");
			String miejsce = sc1.next();
			System.out.println("Podaj date (dd.mm.yyyy)");
			String data = sc.next();
			System.out.println("Podaj godzine (h:min)");
			String godzina = sc.next();
			if(equalsArrayListWydarzenia(wydarzenia, new Wydarzenia(nazwa, miejsce, data, godzina))==false) {
				Wydarzenia wo = new Wydarzenia(nazwa, miejsce, data, godzina);
				db.dodajWydarzenie(wydarzenia, wo);
				wydarzenia.add(wo);
				//xml.zapisWydarzeniaDoXML(wydarzenia);
				break;
			} else {
				System.out.println("Takie wydarzenie już istnieje");
				break;
			}
		case 6: 
			for (int i = 0; i < wydarzenia.size(); i++) {
				System.out.println(i+1+","+wydarzenia.get(i));
			}
			w = sc.nextInt();
			db.usunWydarzenie(wydarzenia.get(w-1));
			wydarzenia.remove(w-1);
			//xml.zapisWydarzeniaDoXML(wydarzenia);
			break;
		case 7: 
			System.out.println(wyswietlWydarzenia(wydarzenia));
			break;
		case 8: 
			System.out.println("Po czy chcesz posortowac?");
			System.out.println("1. nazwie");
			System.out.println("2. miejscu");
			int wybor3 = sc.nextInt();
			switch(wybor3)
			{
				case 1:
					Collections.sort(wydarzenia);
					System.out.println("Sortowanie..");
					for (int i = 0; i < wydarzenia.size();i++) {
						System.out.println(wydarzenia.get(i));
					}
					System.out.println();
					break;
				case 2:
					Collections.sort(wydarzenia,new WydarzenieMiejsceComparator());
					System.out.println("Sortowanie..");
					for (int i = 0; i < wydarzenia.size();i++) {
						System.out.println(wydarzenia.get(i));
					}
					System.out.println();
					break;
			}
			break;
		case 9:
			System.out.println(wyswietlKontakty(kontakt));
			System.out.println("Podaj nr id kontaktu");
			int nr1 = sc2.nextInt();
			System.out.println(wyswietlWydarzenia(wydarzenia));
			System.out.println("Podaj nr id wydarzenia");
			int nr2 = sc2.nextInt();
			kontakt.get(nr1-1).setWydarzenie(wydarzenia.get(nr2-1));

			if(wydarzenia.get(nr2-1).equalsKontakty(kontakt.get(nr1-1))==false) {
			wydarzenia.get(nr2-1).setKontakt(kontakt.get(nr1-1));
			db.przypiszKontaktdoWydarzenia(nr1-1, nr2-1);
			for(int i=0; i<wydarzenia.size(); i++) {
				if(wydarzenia.get(i).equalsKontakty(kontakt.get(nr1-1))==true && i != nr2-1) {
					db.usunAssign(kontakt.get(nr1-1), wydarzenia.get(nr2-1));
					wydarzenia.get(i).dropEqualKontakt(kontakt.get(nr1-1));
					db.przypiszKontaktdoWydarzenia(nr1-1, nr2-1);
					//xml.zapisKontaktowDoXML(kontakt);
					//xml.zapisWydarzeniaDoXML(wydarzenia);
				}
			}
			//xml.zapisKontaktowDoXML(kontakt);
			//xml.zapisWydarzeniaDoXML(wydarzenia);
			break;
			} else {
				System.out.println("Ten kontakt został już dodany do tego wydarzenia");
				for(int i=0; i<wydarzenia.size(); i++) {
					if(wydarzenia.get(i).equalsKontakty(kontakt.get(nr1-1))==true && i != nr2-1) {
						wydarzenia.get(i).dropEqualKontakt(kontakt.get(nr1-1));
						//xml.zapisKontaktowDoXML(kontakt);
						//xml.zapisWydarzeniaDoXML(wydarzenia);
					}
				}
				//xml.zapisKontaktowDoXML(kontakt);
				//xml.zapisWydarzeniaDoXML(wydarzenia);
				break;
			}
		case 10:
			System.out.println(wyswietlKontakty(kontakt));
			System.out.println("Podaj nr id kontaktu");
			int nr3 = sc2.nextInt();
			System.out.println("Podaj imie");
			String imie1 = sc.next();
			System.out.println("Podaj nazwisko");
			String nazwisko1= sc.next();
			System.out.println("Podaj nr");
			int numer1 = sc.nextInt();
			System.out.println("Podaj email");
			String email1= sc.next();
			kontakt.get(nr3-1).setImie(imie1);
			kontakt.get(nr3-1).setNazwisko(nazwisko1);
			kontakt.get(nr3-1).setNr(numer1);
			kontakt.get(nr3-1).setEmail(email1);
			
			db.edytujKontakt(kontakt.get(nr3-1));
			
			//xml.zapisKontaktowDoXML(kontakt);
			
			System.out.println("Pomyślnie edytowano kontakt");
			break;
		case 11:
			System.out.println(wyswietlWydarzenia(wydarzenia));
			System.out.println("Podaj nr id wydarzenia");
			int nr4 = sc2.nextInt();
			System.out.println("Podaj nazwe wydarzenia");
			String nazwa1 = sc1.next();
			System.out.println("Podaj miejsce wydarzenia");
			String miejsce1 = sc1.next();
			System.out.println("Podaj date (dd.mm.yyyy)");
			String data1 = sc.next();
			System.out.println("Podaj godzine (h:min)");
			String godzina1 = sc.next();
		    wydarzenia.get(nr4-1).setNazwa(nazwa1);
		    wydarzenia.get(nr4-1).setMiejsce(miejsce1);
		    wydarzenia.get(nr4-1).setData(data1);
		    wydarzenia.get(nr4-1).setGodzina(godzina1);
			
			db.edytujWydarzenie(wydarzenia.get(nr4-1));
			
			//xml.zapisWydarzeniaDoXML(wydarzenia);
			
			System.out.println("Pomyślnie edytowano wydarzenie");
			break;
		case 0: 
			System.out.println("Do widzenia");
			System.exit(0);
			break;
			}	
		}*/
	}
}
